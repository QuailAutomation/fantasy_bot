# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build image job
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
           submodules: 'recursive'

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.docker_hub_username }}
          password: ${{ secrets.docker_hub_password }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            craigham/fantasy_bot:latest
            "craigham/fantasy_bot:0.1.${{ github.run_number}}"
        




      # -
      #   name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build and publish image
      #   uses: ilteoood/docker_buildx@master
      #   with:
      #     publish: true
      #     imageName: craigham/fantasy-bot
      #     dockerUser: ${{ secrets.docker_hub_username }}
      #     dockerPassword: ${{ secrets.docker_hub_password }}
      #     tag: 0.1.$GITHUB_RUN_NUMBER,latest
      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
           
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,ref,workflow, run_id # selectable (default: repo,message)
          text: 'Pushed: craigham/fantasy-bot:0.1.${{ github.run_number}}'
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
        if: success() 